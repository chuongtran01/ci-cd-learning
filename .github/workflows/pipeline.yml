name: Pipeline

on:
  push:
    branches: ["main"]

jobs:
  build-project:
    name: Building application

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install NPM dependencies
        run: npm ci
      - name: Building application
        run: npm run build
      - name: Testing
        run: npm run test

  docker-build-push:
    name: Build and Push Docker Image

    needs: build-project

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ci-cd-learning

  deploy:
    name: Deploy

    needs: build-project

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} &&
            docker ps -aq | xargs docker stop | xargs docker rm &&
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ci-cd-learning
            docker run -d -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/ci-cd-learning
